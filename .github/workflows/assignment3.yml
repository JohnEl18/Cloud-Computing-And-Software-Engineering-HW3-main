name: assignment3

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Build Docker image
      id: build-image
      run: |
        echo "$(date --iso-8601=minutes)" > log.txt
        echo "Yehontan Eliyahu Moshe Azulay" >> log.txt
        docker build -t my-service . && echo "image successfully built" >> log.txt || (echo "image not able to be built" >> log.txt && exit 1)
        docker save my-service -o image.tar

    - name: Upload Docker image
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: image.tar

    - name: Upload log file
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: log
        path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Download log file
      if: ${{ always() }}
      uses: actions/download-artifact@v3
      with:
        name: log
        path: previous-log

    - name: Merge log files
      run: |
        cat previous-log/log.txt >> log.txt

    - name: Set up Python
      uses: actions/setup-python@v4


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest requests

    - name: Download Docker image
      uses: actions/download-artifact@v3
      with:
        name: docker-image
        path: .

    - name: Load Docker image
      run: docker load --input image.tar

    - name: Run Docker container
      run: |
        docker run --name my-service-container -p8000:8000 my-service &
      #&& echo "Container up and running" >> log.txt || (echo "Container failed to run" >> log.txt && exit 1)

    - name: Run Pytest
      run: pytest -v tests/assn3_tests.py | tee assn3_test_results.txt
      continue-on-error: true

    - name: Check test results
      run: |
        if grep -q "failed" assn3_test_results.txt; then echo "tests failed" >> log.txt; exit 1; else echo "tests succeeded" >> log.txt; fi

    - name: Upload updated log file
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: log
        path: log.txt

    - name: Upload test results
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: assn3_test_results
        path: assn3_test_results.txt

  query:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Download log file
      if: ${{ always() }}
      uses: actions/download-artifact@v3
      with:
        name: log
        path: previous-log

    - name: Merge log files
      run: |
        cat previous-log/log.txt >> log.txt

    - name: Download Docker image
      uses: actions/download-artifact@v3
      with:
        name: docker-image
        path: .

    - name: Load Docker image
      run: docker load --input image.tar

    - name: Run Docker container
      run: |
        docker run -d --name my-service-container -p 8000:8000 my-service

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Query the service
      run: python query.py

    - name: Upload query results
      uses: actions/upload-artifact@v3
      with:
        name: query-results
        path: response.txt

    - name: Upload updated log file
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: log
        path: log.txt
